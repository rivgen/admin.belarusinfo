security:
    encoders:
            App\Entity\Customer:
                algorithm: bcrypt
                cost: 12

            App\Entity\User:
                        algorithm: argon2i

    role_hierarchy:
            ROLE_ADMIN:                ROLE_USER
            ROLE_ADMIN_CUSTOMER:       ROLE_CUSTOMER
#            ROLE_SUPER_ADMIN:          ROLE_ADMIN
            ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ADMIN_CUSTOMER]


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
#        customer_provider:
#                   entity:
#                       class: 'App\Entity\Customer'
#                       property: email
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            form_login:
                            provider: app_user_provider
                            login_path: login
                            check_path: login
            logout:
                            path:     /logout
                            target:    /
            remember_me:
                            secret:   '%kernel.secret%'
                            lifetime: 604800 # 1 week in seconds
#                            path:     /dashboard
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator



            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
     - { path: ^/dashboard, roles: [ ROLE_CUSTOMER, ROLE_USER ] }
     - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
